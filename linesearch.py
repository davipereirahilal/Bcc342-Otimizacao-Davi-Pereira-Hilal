# -*- coding: utf-8 -*-
"""linesearch.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hp_a-YgB6P2e6jhdlNfJqC06obPtx6wF
"""

import math

def interpolacaoquadratica(f,a,b,tol=1e-6):
  c = b
  b = (c-a)/2

  fa = f(a)
  fb = f(b)
  fc = f(c)

  while abs(c-a) < tol:
    x = 0.5*(fa*(b**2-c**2)+fb*(c**2-a**2)+fc*(a**2-b**2))/(fa*(b-c) +fb*(c-a) +fc*(a-b))
    fx = f(x)
    print(x)
    if x > b:
      if fx > fb:
        c = x
        fc = fx
      else: 
        a = b
        fa = fb
        b = x
        fb = fx
    else:
      if fx > fb:
        a = x
        fa = fx
      else:
        c = b
        fc = fb
        b = x
        fb = fx

  return (a+c)/2

gr = (math.sqrt(5) + 1) / 2

def goldensection(f, a, b, t=0.0005):
 c = b - (b - a) / gr
 d = a + (b - a) / gr
 while (b - a) > t:
        if f(c) < f(d):
            b = d
        else:
            a = c
        c = b - (b - a) / gr
        d = a + (b - a) / gr

 return (b + a) / 2


f= lambda x:(x+2)**2
b= goldensection(f,2,6)
print( b)

def bracketing(a,f,s=0.01,m=2):
    b = a + s

    fa=f(a)
    fb=f(b)
    if fa > fb :
        c=b+s
        fc=f(c)
        while fc < fb :
                fb=fc
                b=c
                s=s*m
                c=c+s
                fc=f(c)
        bracketing =[a,c]
        
    
    if fb > fa:
            a=b-s
            c=a-s
            fc=f(c)
            while fc < fa :
            
                    fa=fc
                    a=c
                    s=s*m
                    c=c-s
                    fc=f(c)
                    
            bracketing = [c,b]

    return bracketing